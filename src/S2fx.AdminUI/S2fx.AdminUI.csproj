<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <OutputType>Library</OutputType>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <SpaRoot>Client\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.8" />
        <PackageReference Include="Microsoft.AspNetCore.StaticFiles" Version="2.2.0" />
        <PackageReference Include="OrchardCore.Module.Targets" Version="1.0.0" />
        <PackageReference Include="OrchardCore.Mvc.Core" Version="1.0.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <EmbeddedResource Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <NgDistFiles Include="$(SpaRoot)dist\s2fx-ngapp\**" />
    </ItemGroup>

    <ItemGroup>
        <Content Remove="wwwroot\**\*" />
        <EmbeddedResource Remove="wwwroot\**\*" />
        <None Remove="wwwroot\**\*" />
        <EmbeddedResource Remove=".gitignore" />
        <Folder Include="wwwroot" Exclude="wwwroot\**\*" />
    </ItemGroup>

    <ItemGroup>
        <None Include=".gitignore" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\S2fx.Framework\S2fx.Framework.csproj" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
        <!--
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install silent" />
        -->
    </Target>

    <Target Name="ReleaseNgBuild" BeforeTargets="BeforeBuild" Condition=" '$(Configuration)' == 'Release' ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'yarn'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn install --silent" />
        <!-- 执行 ng 构建 -->
        <Message Importance="high" Text="Building Angular App for release configuration..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="yarn run msbuild-release" />
        <Message Importance="high" Text="Copying files in 'dist' to 'wwwroot'..." />
        <Copy SourceFiles="@(NgDistFiles)" DestinationFiles="@(NgDistFiles->'wwwroot\%(RecursiveDir)%(Filename)%(Extension)')" />
        <Message Importance="high" Text="Adding static files as embedded resource..." />
        <ItemGroup>
            <EmbeddedResource Include="wwwroot\**\*">
            </EmbeddedResource>
        </ItemGroup>
    </Target>

</Project>
